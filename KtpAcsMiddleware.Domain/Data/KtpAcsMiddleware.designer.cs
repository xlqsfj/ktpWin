#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace KtpAcsMiddleware.Domain.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KtpAcsMiddleware")]
	public partial class KtpAcsMiddlewareDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertFaceDevice(FaceDevice instance);
    partial void UpdateFaceDevice(FaceDevice instance);
    partial void DeleteFaceDevice(FaceDevice instance);
    partial void InsertZmskAuthenticationSync(ZmskAuthenticationSync instance);
    partial void UpdateZmskAuthenticationSync(ZmskAuthenticationSync instance);
    partial void DeleteZmskAuthenticationSync(ZmskAuthenticationSync instance);
    partial void InsertFaceDeviceWorker(FaceDeviceWorker instance);
    partial void UpdateFaceDeviceWorker(FaceDeviceWorker instance);
    partial void DeleteFaceDeviceWorker(FaceDeviceWorker instance);
    partial void InsertFileMap(FileMap instance);
    partial void UpdateFileMap(FileMap instance);
    partial void DeleteFileMap(FileMap instance);
    partial void InsertOrgUser(OrgUser instance);
    partial void UpdateOrgUser(OrgUser instance);
    partial void DeleteOrgUser(OrgUser instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertTeamSync(TeamSync instance);
    partial void UpdateTeamSync(TeamSync instance);
    partial void DeleteTeamSync(TeamSync instance);
    partial void InsertTeamWorkType(TeamWorkType instance);
    partial void UpdateTeamWorkType(TeamWorkType instance);
    partial void DeleteTeamWorkType(TeamWorkType instance);
    partial void InsertWorker(Worker instance);
    partial void UpdateWorker(Worker instance);
    partial void DeleteWorker(Worker instance);
    partial void InsertWorkerAuth(WorkerAuth instance);
    partial void UpdateWorkerAuth(WorkerAuth instance);
    partial void DeleteWorkerAuth(WorkerAuth instance);
    partial void InsertWorkerIdentity(WorkerIdentity instance);
    partial void UpdateWorkerIdentity(WorkerIdentity instance);
    partial void DeleteWorkerIdentity(WorkerIdentity instance);
    partial void InsertWorkerSync(WorkerSync instance);
    partial void UpdateWorkerSync(WorkerSync instance);
    partial void DeleteWorkerSync(WorkerSync instance);
    partial void InsertZmskAuthentication(ZmskAuthentication instance);
    partial void UpdateZmskAuthentication(ZmskAuthentication instance);
    partial void DeleteZmskAuthentication(ZmskAuthentication instance);
    #endregion
		
		public KtpAcsMiddlewareDataContext() : 
				base(global::KtpAcsMiddleware.Domain.Properties.Settings.Default.KtpAcsMiddlewareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KtpAcsMiddlewareDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KtpAcsMiddlewareDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KtpAcsMiddlewareDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KtpAcsMiddlewareDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FaceDevice> FaceDevices
		{
			get
			{
				return this.GetTable<FaceDevice>();
			}
		}
		
		public System.Data.Linq.Table<ZmskAuthenticationSync> ZmskAuthenticationSyncs
		{
			get
			{
				return this.GetTable<ZmskAuthenticationSync>();
			}
		}
		
		public System.Data.Linq.Table<FaceDeviceWorker> FaceDeviceWorkers
		{
			get
			{
				return this.GetTable<FaceDeviceWorker>();
			}
		}
		
		public System.Data.Linq.Table<FileMap> FileMaps
		{
			get
			{
				return this.GetTable<FileMap>();
			}
		}
		
		public System.Data.Linq.Table<OrgUser> OrgUsers
		{
			get
			{
				return this.GetTable<OrgUser>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<TeamSync> TeamSyncs
		{
			get
			{
				return this.GetTable<TeamSync>();
			}
		}
		
		public System.Data.Linq.Table<TeamWorkType> TeamWorkTypes
		{
			get
			{
				return this.GetTable<TeamWorkType>();
			}
		}
		
		public System.Data.Linq.Table<Worker> Workers
		{
			get
			{
				return this.GetTable<Worker>();
			}
		}
		
		public System.Data.Linq.Table<WorkerAuth> WorkerAuths
		{
			get
			{
				return this.GetTable<WorkerAuth>();
			}
		}
		
		public System.Data.Linq.Table<WorkerIdentity> WorkerIdentities
		{
			get
			{
				return this.GetTable<WorkerIdentity>();
			}
		}
		
		public System.Data.Linq.Table<WorkerSync> WorkerSyncs
		{
			get
			{
				return this.GetTable<WorkerSync>();
			}
		}
		
		public System.Data.Linq.Table<ZmskAuthentication> ZmskAuthentications
		{
			get
			{
				return this.GetTable<ZmskAuthentication>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FaceDevice")]
	public partial class FaceDevice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _IpAddress;
		
		private System.Nullable<int> _IdentityId;
		
		private System.Nullable<bool> _IsCheckIn;
		
		private string _Description;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private bool _IsDelete;
		
		private EntitySet<FaceDeviceWorker> _FaceDeviceWorkers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnIpAddressChanging(string value);
    partial void OnIpAddressChanged();
    partial void OnIdentityIdChanging(System.Nullable<int> value);
    partial void OnIdentityIdChanged();
    partial void OnIsCheckInChanging(System.Nullable<bool> value);
    partial void OnIsCheckInChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public FaceDevice()
		{
			this._FaceDeviceWorkers = new EntitySet<FaceDeviceWorker>(new Action<FaceDeviceWorker>(this.attach_FaceDeviceWorkers), new Action<FaceDeviceWorker>(this.detach_FaceDeviceWorkers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IpAddress
		{
			get
			{
				return this._IpAddress;
			}
			set
			{
				if ((this._IpAddress != value))
				{
					this.OnIpAddressChanging(value);
					this.SendPropertyChanging();
					this._IpAddress = value;
					this.SendPropertyChanged("IpAddress");
					this.OnIpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", DbType="Int")]
		public System.Nullable<int> IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCheckIn", DbType="Bit")]
		public System.Nullable<bool> IsCheckIn
		{
			get
			{
				return this._IsCheckIn;
			}
			set
			{
				if ((this._IsCheckIn != value))
				{
					this.OnIsCheckInChanging(value);
					this.SendPropertyChanging();
					this._IsCheckIn = value;
					this.SendPropertyChanged("IsCheckIn");
					this.OnIsCheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FaceDevice_FaceDeviceWorker", Storage="_FaceDeviceWorkers", ThisKey="Id", OtherKey="DeviceId")]
		public EntitySet<FaceDeviceWorker> FaceDeviceWorkers
		{
			get
			{
				return this._FaceDeviceWorkers;
			}
			set
			{
				this._FaceDeviceWorkers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FaceDeviceWorkers(FaceDeviceWorker entity)
		{
			this.SendPropertyChanging();
			entity.FaceDevice = this;
		}
		
		private void detach_FaceDeviceWorkers(FaceDeviceWorker entity)
		{
			this.SendPropertyChanging();
			entity.FaceDevice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZmskAuthenticationSync")]
	public partial class ZmskAuthenticationSync : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _ProjectId;
		
		private int _ThirdPartyWorkerId;
		
		private int _ClockType;
		
		private string _ClockPic;
		
		private int _Status;
		
		private System.Nullable<int> _FeedbackCode;
		
		private string _Feedback;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private EntityRef<ZmskAuthentication> _ZmskAuthentication;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnThirdPartyWorkerIdChanging(int value);
    partial void OnThirdPartyWorkerIdChanged();
    partial void OnClockTypeChanging(int value);
    partial void OnClockTypeChanged();
    partial void OnClockPicChanging(string value);
    partial void OnClockPicChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFeedbackCodeChanging(System.Nullable<int> value);
    partial void OnFeedbackCodeChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public ZmskAuthenticationSync()
		{
			this._ZmskAuthentication = default(EntityRef<ZmskAuthentication>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._ZmskAuthentication.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyWorkerId", DbType="Int NOT NULL")]
		public int ThirdPartyWorkerId
		{
			get
			{
				return this._ThirdPartyWorkerId;
			}
			set
			{
				if ((this._ThirdPartyWorkerId != value))
				{
					this.OnThirdPartyWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyWorkerId = value;
					this.SendPropertyChanged("ThirdPartyWorkerId");
					this.OnThirdPartyWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClockType", DbType="Int NOT NULL")]
		public int ClockType
		{
			get
			{
				return this._ClockType;
			}
			set
			{
				if ((this._ClockType != value))
				{
					this.OnClockTypeChanging(value);
					this.SendPropertyChanging();
					this._ClockType = value;
					this.SendPropertyChanged("ClockType");
					this.OnClockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClockPic", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string ClockPic
		{
			get
			{
				return this._ClockPic;
			}
			set
			{
				if ((this._ClockPic != value))
				{
					this.OnClockPicChanging(value);
					this.SendPropertyChanging();
					this._ClockPic = value;
					this.SendPropertyChanged("ClockPic");
					this.OnClockPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackCode", DbType="Int")]
		public System.Nullable<int> FeedbackCode
		{
			get
			{
				return this._FeedbackCode;
			}
			set
			{
				if ((this._FeedbackCode != value))
				{
					this.OnFeedbackCodeChanging(value);
					this.SendPropertyChanging();
					this._FeedbackCode = value;
					this.SendPropertyChanged("FeedbackCode");
					this.OnFeedbackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(500)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZmskAuthentication_ZmskAuthenticationSync", Storage="_ZmskAuthentication", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ZmskAuthentication ZmskAuthentication
		{
			get
			{
				return this._ZmskAuthentication.Entity;
			}
			set
			{
				ZmskAuthentication previousValue = this._ZmskAuthentication.Entity;
				if (((previousValue != value) 
							|| (this._ZmskAuthentication.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZmskAuthentication.Entity = null;
						previousValue.ZmskAuthenticationSync = null;
					}
					this._ZmskAuthentication.Entity = value;
					if ((value != null))
					{
						value.ZmskAuthenticationSync = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(string);
					}
					this.SendPropertyChanged("ZmskAuthentication");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FaceDeviceWorker")]
	public partial class FaceDeviceWorker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _IdentityId;
		
		private string _WorkerId;
		
		private string _DeviceId;
		
		private int _Status;
		
		private string _ErrorCode;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private bool _IsDelete;
		
		private EntityRef<FaceDevice> _FaceDevice;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnIdentityIdChanging(int value);
    partial void OnIdentityIdChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnDeviceIdChanging(string value);
    partial void OnDeviceIdChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnErrorCodeChanging(string value);
    partial void OnErrorCodeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public FaceDeviceWorker()
		{
			this._FaceDevice = default(EntityRef<FaceDevice>);
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceId
		{
			get
			{
				return this._DeviceId;
			}
			set
			{
				if ((this._DeviceId != value))
				{
					if (this._FaceDevice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeviceIdChanging(value);
					this.SendPropertyChanging();
					this._DeviceId = value;
					this.SendPropertyChanged("DeviceId");
					this.OnDeviceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorCode", DbType="NVarChar(50)")]
		public string ErrorCode
		{
			get
			{
				return this._ErrorCode;
			}
			set
			{
				if ((this._ErrorCode != value))
				{
					this.OnErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ErrorCode = value;
					this.SendPropertyChanged("ErrorCode");
					this.OnErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FaceDevice_FaceDeviceWorker", Storage="_FaceDevice", ThisKey="DeviceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FaceDevice FaceDevice
		{
			get
			{
				return this._FaceDevice.Entity;
			}
			set
			{
				FaceDevice previousValue = this._FaceDevice.Entity;
				if (((previousValue != value) 
							|| (this._FaceDevice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FaceDevice.Entity = null;
						previousValue.FaceDeviceWorkers.Remove(this);
					}
					this._FaceDevice.Entity = value;
					if ((value != null))
					{
						value.FaceDeviceWorkers.Add(this);
						this._DeviceId = value.Id;
					}
					else
					{
						this._DeviceId = default(string);
					}
					this.SendPropertyChanged("FaceDevice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_FaceDeviceWorker", Storage="_Worker", ThisKey="WorkerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.FaceDeviceWorkers.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.FaceDeviceWorkers.Add(this);
						this._WorkerId = value.Id;
					}
					else
					{
						this._WorkerId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileMap")]
	public partial class FileMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _FileName;
		
		private string _PhysicalFileName;
		
		private string _PhysicalFullName;
		
		private int _Length;
		
		private string _FileExtensionName;
		
		private string _QiniuKey;
		
		private string _QiniuUrl;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPhysicalFileNameChanging(string value);
    partial void OnPhysicalFileNameChanged();
    partial void OnPhysicalFullNameChanging(string value);
    partial void OnPhysicalFullNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnFileExtensionNameChanging(string value);
    partial void OnFileExtensionNameChanged();
    partial void OnQiniuKeyChanging(string value);
    partial void OnQiniuKeyChanged();
    partial void OnQiniuUrlChanging(string value);
    partial void OnQiniuUrlChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public FileMap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalFileName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string PhysicalFileName
		{
			get
			{
				return this._PhysicalFileName;
			}
			set
			{
				if ((this._PhysicalFileName != value))
				{
					this.OnPhysicalFileNameChanging(value);
					this.SendPropertyChanging();
					this._PhysicalFileName = value;
					this.SendPropertyChanged("PhysicalFileName");
					this.OnPhysicalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalFullName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string PhysicalFullName
		{
			get
			{
				return this._PhysicalFullName;
			}
			set
			{
				if ((this._PhysicalFullName != value))
				{
					this.OnPhysicalFullNameChanging(value);
					this.SendPropertyChanging();
					this._PhysicalFullName = value;
					this.SendPropertyChanged("PhysicalFullName");
					this.OnPhysicalFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExtensionName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FileExtensionName
		{
			get
			{
				return this._FileExtensionName;
			}
			set
			{
				if ((this._FileExtensionName != value))
				{
					this.OnFileExtensionNameChanging(value);
					this.SendPropertyChanging();
					this._FileExtensionName = value;
					this.SendPropertyChanged("FileExtensionName");
					this.OnFileExtensionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QiniuKey", DbType="NVarChar(100)")]
		public string QiniuKey
		{
			get
			{
				return this._QiniuKey;
			}
			set
			{
				if ((this._QiniuKey != value))
				{
					this.OnQiniuKeyChanging(value);
					this.SendPropertyChanging();
					this._QiniuKey = value;
					this.SendPropertyChanged("QiniuKey");
					this.OnQiniuKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QiniuUrl", DbType="NVarChar(200)")]
		public string QiniuUrl
		{
			get
			{
				return this._QiniuUrl;
			}
			set
			{
				if ((this._QiniuUrl != value))
				{
					this.OnQiniuUrlChanging(value);
					this.SendPropertyChanging();
					this._QiniuUrl = value;
					this.SendPropertyChanged("QiniuUrl");
					this.OnQiniuUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgUser")]
	public partial class OrgUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _Name;
		
		private string _Account;
		
		private string _Password;
		
		private string _Mobile;
		
		private string _Mail;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private int _Status;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public OrgUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _IdentityId;
		
		private int _ProjectId;
		
		private string _Name;
		
		private string _WorkTypeId;
		
		private string _Description;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private bool _IsDelete;
		
		private string _LeaderId;
		
		private EntityRef<TeamSync> _TeamSync;
		
		private EntitySet<Worker> _Workers;
		
		private EntityRef<TeamWorkType> _TeamWorkType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnIdentityIdChanging(int value);
    partial void OnIdentityIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWorkTypeIdChanging(string value);
    partial void OnWorkTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnLeaderIdChanging(string value);
    partial void OnLeaderIdChanged();
    #endregion
		
		public Team()
		{
			this._TeamSync = default(EntityRef<TeamSync>);
			this._Workers = new EntitySet<Worker>(new Action<Worker>(this.attach_Workers), new Action<Worker>(this.detach_Workers));
			this._TeamWorkType = default(EntityRef<TeamWorkType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL")]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkTypeId
		{
			get
			{
				return this._WorkTypeId;
			}
			set
			{
				if ((this._WorkTypeId != value))
				{
					if (this._TeamWorkType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WorkTypeId = value;
					this.SendPropertyChanged("WorkTypeId");
					this.OnWorkTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderId", DbType="NVarChar(50)")]
		public string LeaderId
		{
			get
			{
				return this._LeaderId;
			}
			set
			{
				if ((this._LeaderId != value))
				{
					this.OnLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderId = value;
					this.SendPropertyChanged("LeaderId");
					this.OnLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_TeamSync", Storage="_TeamSync", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public TeamSync TeamSync
		{
			get
			{
				return this._TeamSync.Entity;
			}
			set
			{
				TeamSync previousValue = this._TeamSync.Entity;
				if (((previousValue != value) 
							|| (this._TeamSync.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamSync.Entity = null;
						previousValue.Team = null;
					}
					this._TeamSync.Entity = value;
					if ((value != null))
					{
						value.Team = this;
					}
					this.SendPropertyChanged("TeamSync");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Worker", Storage="_Workers", ThisKey="Id", OtherKey="TeamId")]
		public EntitySet<Worker> Workers
		{
			get
			{
				return this._Workers;
			}
			set
			{
				this._Workers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamWorkType_Team", Storage="_TeamWorkType", ThisKey="WorkTypeId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TeamWorkType TeamWorkType
		{
			get
			{
				return this._TeamWorkType.Entity;
			}
			set
			{
				TeamWorkType previousValue = this._TeamWorkType.Entity;
				if (((previousValue != value) 
							|| (this._TeamWorkType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeamWorkType.Entity = null;
						previousValue.Teams.Remove(this);
					}
					this._TeamWorkType.Entity = value;
					if ((value != null))
					{
						value.Teams.Add(this);
						this._WorkTypeId = value.Id;
					}
					else
					{
						this._WorkTypeId = default(string);
					}
					this.SendPropertyChanged("TeamWorkType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.Team = this;
		}
		
		private void detach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.Team = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamSync")]
	public partial class TeamSync : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _ThirdPartyId;
		
		private int _Type;
		
		private int _Status;
		
		private System.Nullable<int> _FeedbackCode;
		
		private string _Feedback;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private EntityRef<Team> _Team;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnThirdPartyIdChanging(int value);
    partial void OnThirdPartyIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFeedbackCodeChanging(System.Nullable<int> value);
    partial void OnFeedbackCodeChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public TeamSync()
		{
			this._Team = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyId", DbType="Int NOT NULL")]
		public int ThirdPartyId
		{
			get
			{
				return this._ThirdPartyId;
			}
			set
			{
				if ((this._ThirdPartyId != value))
				{
					this.OnThirdPartyIdChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyId = value;
					this.SendPropertyChanged("ThirdPartyId");
					this.OnThirdPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackCode", DbType="Int")]
		public System.Nullable<int> FeedbackCode
		{
			get
			{
				return this._FeedbackCode;
			}
			set
			{
				if ((this._FeedbackCode != value))
				{
					this.OnFeedbackCodeChanging(value);
					this.SendPropertyChanging();
					this._FeedbackCode = value;
					this.SendPropertyChanged("FeedbackCode");
					this.OnFeedbackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(500)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_TeamSync", Storage="_Team", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.TeamSync = null;
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.TeamSync = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamWorkType")]
	public partial class TeamWorkType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _Value;
		
		private string _Name;
		
		private System.DateTime _CreateTime;
		
		private bool _IsDelete;
		
		private EntitySet<Team> _Teams;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnValueChanging(int value);
    partial void OnValueChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public TeamWorkType()
		{
			this._Teams = new EntitySet<Team>(new Action<Team>(this.attach_Teams), new Action<Team>(this.detach_Teams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int NOT NULL")]
		public int Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeamWorkType_Team", Storage="_Teams", ThisKey="Id", OtherKey="WorkTypeId")]
		public EntitySet<Team> Teams
		{
			get
			{
				return this._Teams;
			}
			set
			{
				this._Teams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.TeamWorkType = this;
		}
		
		private void detach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.TeamWorkType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Worker")]
	public partial class Worker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _IdentityId;
		
		private string _TeamId;
		
		private System.DateTime _InTime;
		
		private System.Nullable<System.DateTime> _OutTime;
		
		private string _Name;
		
		private string _Mobile;
		
		private int _Status;
		
		private System.Nullable<decimal> _IdentityFaceSim;
		
		private string _AddressNow;
		
		private string _ContractPicId;
		
		private string _FacePicId;
		
		private string _CreatorId;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private bool _IsDelete;
		
		private System.Nullable<int> _BankCardTypeId;
		
		private string _BankCardCode;
		
		private EntitySet<FaceDeviceWorker> _FaceDeviceWorkers;
		
		private EntitySet<WorkerAuth> _WorkerAuths;
		
		private EntityRef<WorkerSync> _WorkerSync;
		
		private EntityRef<Team> _Team;
		
		private EntityRef<WorkerIdentity> _WorkerIdentity;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnIdentityIdChanging(string value);
    partial void OnIdentityIdChanged();
    partial void OnTeamIdChanging(string value);
    partial void OnTeamIdChanged();
    partial void OnInTimeChanging(System.DateTime value);
    partial void OnInTimeChanged();
    partial void OnOutTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOutTimeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnIdentityFaceSimChanging(System.Nullable<decimal> value);
    partial void OnIdentityFaceSimChanged();
    partial void OnAddressNowChanging(string value);
    partial void OnAddressNowChanged();
    partial void OnContractPicIdChanging(string value);
    partial void OnContractPicIdChanged();
    partial void OnFacePicIdChanging(string value);
    partial void OnFacePicIdChanged();
    partial void OnCreatorIdChanging(string value);
    partial void OnCreatorIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    partial void OnBankCardTypeIdChanging(System.Nullable<int> value);
    partial void OnBankCardTypeIdChanged();
    partial void OnBankCardCodeChanging(string value);
    partial void OnBankCardCodeChanged();
    #endregion
		
		public Worker()
		{
			this._FaceDeviceWorkers = new EntitySet<FaceDeviceWorker>(new Action<FaceDeviceWorker>(this.attach_FaceDeviceWorkers), new Action<FaceDeviceWorker>(this.detach_FaceDeviceWorkers));
			this._WorkerAuths = new EntitySet<WorkerAuth>(new Action<WorkerAuth>(this.attach_WorkerAuths), new Action<WorkerAuth>(this.detach_WorkerAuths));
			this._WorkerSync = default(EntityRef<WorkerSync>);
			this._Team = default(EntityRef<Team>);
			this._WorkerIdentity = default(EntityRef<WorkerIdentity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdentityId
		{
			get
			{
				return this._IdentityId;
			}
			set
			{
				if ((this._IdentityId != value))
				{
					if (this._WorkerIdentity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityIdChanging(value);
					this.SendPropertyChanging();
					this._IdentityId = value;
					this.SendPropertyChanged("IdentityId");
					this.OnIdentityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					if (this._Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InTime", DbType="DateTime NOT NULL")]
		public System.DateTime InTime
		{
			get
			{
				return this._InTime;
			}
			set
			{
				if ((this._InTime != value))
				{
					this.OnInTimeChanging(value);
					this.SendPropertyChanging();
					this._InTime = value;
					this.SendPropertyChanged("InTime");
					this.OnInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OutTime
		{
			get
			{
				return this._OutTime;
			}
			set
			{
				if ((this._OutTime != value))
				{
					this.OnOutTimeChanging(value);
					this.SendPropertyChanging();
					this._OutTime = value;
					this.SendPropertyChanged("OutTime");
					this.OnOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityFaceSim", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> IdentityFaceSim
		{
			get
			{
				return this._IdentityFaceSim;
			}
			set
			{
				if ((this._IdentityFaceSim != value))
				{
					this.OnIdentityFaceSimChanging(value);
					this.SendPropertyChanging();
					this._IdentityFaceSim = value;
					this.SendPropertyChanged("IdentityFaceSim");
					this.OnIdentityFaceSimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressNow", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string AddressNow
		{
			get
			{
				return this._AddressNow;
			}
			set
			{
				if ((this._AddressNow != value))
				{
					this.OnAddressNowChanging(value);
					this.SendPropertyChanging();
					this._AddressNow = value;
					this.SendPropertyChanged("AddressNow");
					this.OnAddressNowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractPicId", DbType="NVarChar(50)")]
		public string ContractPicId
		{
			get
			{
				return this._ContractPicId;
			}
			set
			{
				if ((this._ContractPicId != value))
				{
					this.OnContractPicIdChanging(value);
					this.SendPropertyChanging();
					this._ContractPicId = value;
					this.SendPropertyChanged("ContractPicId");
					this.OnContractPicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacePicId", DbType="NVarChar(50)")]
		public string FacePicId
		{
			get
			{
				return this._FacePicId;
			}
			set
			{
				if ((this._FacePicId != value))
				{
					this.OnFacePicIdChanging(value);
					this.SendPropertyChanging();
					this._FacePicId = value;
					this.SendPropertyChanged("FacePicId");
					this.OnFacePicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatorId
		{
			get
			{
				return this._CreatorId;
			}
			set
			{
				if ((this._CreatorId != value))
				{
					this.OnCreatorIdChanging(value);
					this.SendPropertyChanging();
					this._CreatorId = value;
					this.SendPropertyChanged("CreatorId");
					this.OnCreatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCardTypeId", DbType="Int")]
		public System.Nullable<int> BankCardTypeId
		{
			get
			{
				return this._BankCardTypeId;
			}
			set
			{
				if ((this._BankCardTypeId != value))
				{
					this.OnBankCardTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BankCardTypeId = value;
					this.SendPropertyChanged("BankCardTypeId");
					this.OnBankCardTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankCardCode", DbType="NVarChar(50)")]
		public string BankCardCode
		{
			get
			{
				return this._BankCardCode;
			}
			set
			{
				if ((this._BankCardCode != value))
				{
					this.OnBankCardCodeChanging(value);
					this.SendPropertyChanging();
					this._BankCardCode = value;
					this.SendPropertyChanged("BankCardCode");
					this.OnBankCardCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_FaceDeviceWorker", Storage="_FaceDeviceWorkers", ThisKey="Id", OtherKey="WorkerId")]
		public EntitySet<FaceDeviceWorker> FaceDeviceWorkers
		{
			get
			{
				return this._FaceDeviceWorkers;
			}
			set
			{
				this._FaceDeviceWorkers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkerAuth", Storage="_WorkerAuths", ThisKey="Id", OtherKey="WorkerId")]
		public EntitySet<WorkerAuth> WorkerAuths
		{
			get
			{
				return this._WorkerAuths;
			}
			set
			{
				this._WorkerAuths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkerSync", Storage="_WorkerSync", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public WorkerSync WorkerSync
		{
			get
			{
				return this._WorkerSync.Entity;
			}
			set
			{
				WorkerSync previousValue = this._WorkerSync.Entity;
				if (((previousValue != value) 
							|| (this._WorkerSync.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkerSync.Entity = null;
						previousValue.Worker = null;
					}
					this._WorkerSync.Entity = value;
					if ((value != null))
					{
						value.Worker = this;
					}
					this.SendPropertyChanged("WorkerSync");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_Worker", Storage="_Team", ThisKey="TeamId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Team Team
		{
			get
			{
				return this._Team.Entity;
			}
			set
			{
				Team previousValue = this._Team.Entity;
				if (((previousValue != value) 
							|| (this._Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team.Entity = null;
						previousValue.Workers.Remove(this);
					}
					this._Team.Entity = value;
					if ((value != null))
					{
						value.Workers.Add(this);
						this._TeamId = value.Id;
					}
					else
					{
						this._TeamId = default(string);
					}
					this.SendPropertyChanged("Team");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkerIdentity_Worker", Storage="_WorkerIdentity", ThisKey="IdentityId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public WorkerIdentity WorkerIdentity
		{
			get
			{
				return this._WorkerIdentity.Entity;
			}
			set
			{
				WorkerIdentity previousValue = this._WorkerIdentity.Entity;
				if (((previousValue != value) 
							|| (this._WorkerIdentity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkerIdentity.Entity = null;
						previousValue.Workers.Remove(this);
					}
					this._WorkerIdentity.Entity = value;
					if ((value != null))
					{
						value.Workers.Add(this);
						this._IdentityId = value.Id;
					}
					else
					{
						this._IdentityId = default(string);
					}
					this.SendPropertyChanged("WorkerIdentity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FaceDeviceWorkers(FaceDeviceWorker entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_FaceDeviceWorkers(FaceDeviceWorker entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
		
		private void attach_WorkerAuths(WorkerAuth entity)
		{
			this.SendPropertyChanging();
			entity.Worker = this;
		}
		
		private void detach_WorkerAuths(WorkerAuth entity)
		{
			this.SendPropertyChanging();
			entity.Worker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkerAuth")]
	public partial class WorkerAuth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _WorkerId;
		
		private string _TeamId;
		
		private string _TeamName;
		
		private int _ClockType;
		
		private System.DateTime _ClockTime;
		
		private System.Nullable<decimal> _SimilarDegree;
		
		private bool _IsPass;
		
		private string _ClockPicId;
		
		private System.DateTime _CreateTime;
		
		private string _AuthId;
		
		private string _ClientCode;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnWorkerIdChanging(string value);
    partial void OnWorkerIdChanged();
    partial void OnTeamIdChanging(string value);
    partial void OnTeamIdChanged();
    partial void OnTeamNameChanging(string value);
    partial void OnTeamNameChanged();
    partial void OnClockTypeChanging(int value);
    partial void OnClockTypeChanged();
    partial void OnClockTimeChanging(System.DateTime value);
    partial void OnClockTimeChanged();
    partial void OnSimilarDegreeChanging(System.Nullable<decimal> value);
    partial void OnSimilarDegreeChanged();
    partial void OnIsPassChanging(bool value);
    partial void OnIsPassChanged();
    partial void OnClockPicIdChanging(string value);
    partial void OnClockPicIdChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnAuthIdChanging(string value);
    partial void OnAuthIdChanged();
    partial void OnClientCodeChanging(string value);
    partial void OnClientCodeChanged();
    #endregion
		
		public WorkerAuth()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkerId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WorkerId
		{
			get
			{
				return this._WorkerId;
			}
			set
			{
				if ((this._WorkerId != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkerIdChanging(value);
					this.SendPropertyChanging();
					this._WorkerId = value;
					this.SendPropertyChanged("WorkerId");
					this.OnWorkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this.OnTeamNameChanging(value);
					this.SendPropertyChanging();
					this._TeamName = value;
					this.SendPropertyChanged("TeamName");
					this.OnTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClockType", DbType="Int NOT NULL")]
		public int ClockType
		{
			get
			{
				return this._ClockType;
			}
			set
			{
				if ((this._ClockType != value))
				{
					this.OnClockTypeChanging(value);
					this.SendPropertyChanging();
					this._ClockType = value;
					this.SendPropertyChanged("ClockType");
					this.OnClockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClockTime", DbType="DateTime NOT NULL")]
		public System.DateTime ClockTime
		{
			get
			{
				return this._ClockTime;
			}
			set
			{
				if ((this._ClockTime != value))
				{
					this.OnClockTimeChanging(value);
					this.SendPropertyChanging();
					this._ClockTime = value;
					this.SendPropertyChanged("ClockTime");
					this.OnClockTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimilarDegree", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SimilarDegree
		{
			get
			{
				return this._SimilarDegree;
			}
			set
			{
				if ((this._SimilarDegree != value))
				{
					this.OnSimilarDegreeChanging(value);
					this.SendPropertyChanging();
					this._SimilarDegree = value;
					this.SendPropertyChanged("SimilarDegree");
					this.OnSimilarDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPass", DbType="Bit NOT NULL")]
		public bool IsPass
		{
			get
			{
				return this._IsPass;
			}
			set
			{
				if ((this._IsPass != value))
				{
					this.OnIsPassChanging(value);
					this.SendPropertyChanging();
					this._IsPass = value;
					this.SendPropertyChanged("IsPass");
					this.OnIsPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClockPicId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClockPicId
		{
			get
			{
				return this._ClockPicId;
			}
			set
			{
				if ((this._ClockPicId != value))
				{
					this.OnClockPicIdChanging(value);
					this.SendPropertyChanging();
					this._ClockPicId = value;
					this.SendPropertyChanged("ClockPicId");
					this.OnClockPicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthId", DbType="NVarChar(50)")]
		public string AuthId
		{
			get
			{
				return this._AuthId;
			}
			set
			{
				if ((this._AuthId != value))
				{
					this.OnAuthIdChanging(value);
					this.SendPropertyChanging();
					this._AuthId = value;
					this.SendPropertyChanged("AuthId");
					this.OnAuthIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientCode
		{
			get
			{
				return this._ClientCode;
			}
			set
			{
				if ((this._ClientCode != value))
				{
					this.OnClientCodeChanging(value);
					this.SendPropertyChanging();
					this._ClientCode = value;
					this.SendPropertyChanged("ClientCode");
					this.OnClientCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkerAuth", Storage="_Worker", ThisKey="WorkerId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.WorkerAuths.Remove(this);
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.WorkerAuths.Add(this);
						this._WorkerId = value.Id;
					}
					else
					{
						this._WorkerId = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkerIdentity")]
	public partial class WorkerIdentity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Code;
		
		private string _Name;
		
		private int _Sex;
		
		private int _Nation;
		
		private System.DateTime _Birthday;
		
		private string _Address;
		
		private string _IssuingAuthority;
		
		private System.DateTime _ActivateTime;
		
		private System.DateTime _InvalidTime;
		
		private string _PicId;
		
		private string _BackPicId;
		
		private string _Base64Photo;
		
		private int _CreateType;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private System.Nullable<decimal> _CreditGrade;
		
		private bool _IsDelete;
		
		private EntitySet<Worker> _Workers;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSexChanging(int value);
    partial void OnSexChanged();
    partial void OnNationChanging(int value);
    partial void OnNationChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIssuingAuthorityChanging(string value);
    partial void OnIssuingAuthorityChanged();
    partial void OnActivateTimeChanging(System.DateTime value);
    partial void OnActivateTimeChanged();
    partial void OnInvalidTimeChanging(System.DateTime value);
    partial void OnInvalidTimeChanged();
    partial void OnPicIdChanging(string value);
    partial void OnPicIdChanged();
    partial void OnBackPicIdChanging(string value);
    partial void OnBackPicIdChanged();
    partial void OnBase64PhotoChanging(string value);
    partial void OnBase64PhotoChanged();
    partial void OnCreateTypeChanging(int value);
    partial void OnCreateTypeChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    partial void OnCreditGradeChanging(System.Nullable<decimal> value);
    partial void OnCreditGradeChanged();
    partial void OnIsDeleteChanging(bool value);
    partial void OnIsDeleteChanged();
    #endregion
		
		public WorkerIdentity()
		{
			this._Workers = new EntitySet<Worker>(new Action<Worker>(this.attach_Workers), new Action<Worker>(this.detach_Workers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int NOT NULL")]
		public int Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="Int NOT NULL")]
		public int Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuingAuthority", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string IssuingAuthority
		{
			get
			{
				return this._IssuingAuthority;
			}
			set
			{
				if ((this._IssuingAuthority != value))
				{
					this.OnIssuingAuthorityChanging(value);
					this.SendPropertyChanging();
					this._IssuingAuthority = value;
					this.SendPropertyChanged("IssuingAuthority");
					this.OnIssuingAuthorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivateTime", DbType="DateTime NOT NULL")]
		public System.DateTime ActivateTime
		{
			get
			{
				return this._ActivateTime;
			}
			set
			{
				if ((this._ActivateTime != value))
				{
					this.OnActivateTimeChanging(value);
					this.SendPropertyChanging();
					this._ActivateTime = value;
					this.SendPropertyChanged("ActivateTime");
					this.OnActivateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvalidTime", DbType="DateTime NOT NULL")]
		public System.DateTime InvalidTime
		{
			get
			{
				return this._InvalidTime;
			}
			set
			{
				if ((this._InvalidTime != value))
				{
					this.OnInvalidTimeChanging(value);
					this.SendPropertyChanging();
					this._InvalidTime = value;
					this.SendPropertyChanged("InvalidTime");
					this.OnInvalidTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PicId", DbType="NVarChar(50)")]
		public string PicId
		{
			get
			{
				return this._PicId;
			}
			set
			{
				if ((this._PicId != value))
				{
					this.OnPicIdChanging(value);
					this.SendPropertyChanging();
					this._PicId = value;
					this.SendPropertyChanged("PicId");
					this.OnPicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackPicId", DbType="NVarChar(50)")]
		public string BackPicId
		{
			get
			{
				return this._BackPicId;
			}
			set
			{
				if ((this._BackPicId != value))
				{
					this.OnBackPicIdChanging(value);
					this.SendPropertyChanging();
					this._BackPicId = value;
					this.SendPropertyChanged("BackPicId");
					this.OnBackPicIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Base64Photo", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Base64Photo
		{
			get
			{
				return this._Base64Photo;
			}
			set
			{
				if ((this._Base64Photo != value))
				{
					this.OnBase64PhotoChanging(value);
					this.SendPropertyChanging();
					this._Base64Photo = value;
					this.SendPropertyChanged("Base64Photo");
					this.OnBase64PhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateType", DbType="Int NOT NULL")]
		public int CreateType
		{
			get
			{
				return this._CreateType;
			}
			set
			{
				if ((this._CreateType != value))
				{
					this.OnCreateTypeChanging(value);
					this.SendPropertyChanging();
					this._CreateType = value;
					this.SendPropertyChanged("CreateType");
					this.OnCreateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditGrade", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CreditGrade
		{
			get
			{
				return this._CreditGrade;
			}
			set
			{
				if ((this._CreditGrade != value))
				{
					this.OnCreditGradeChanging(value);
					this.SendPropertyChanging();
					this._CreditGrade = value;
					this.SendPropertyChanged("CreditGrade");
					this.OnCreditGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit NOT NULL")]
		public bool IsDelete
		{
			get
			{
				return this._IsDelete;
			}
			set
			{
				if ((this._IsDelete != value))
				{
					this.OnIsDeleteChanging(value);
					this.SendPropertyChanging();
					this._IsDelete = value;
					this.SendPropertyChanged("IsDelete");
					this.OnIsDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkerIdentity_Worker", Storage="_Workers", ThisKey="Id", OtherKey="IdentityId")]
		public EntitySet<Worker> Workers
		{
			get
			{
				return this._Workers;
			}
			set
			{
				this._Workers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.WorkerIdentity = this;
		}
		
		private void detach_Workers(Worker entity)
		{
			this.SendPropertyChanging();
			entity.WorkerIdentity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkerSync")]
	public partial class WorkerSync : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private int _ThirdPartyId;
		
		private int _TeamThirdPartyId;
		
		private int _Type;
		
		private int _Status;
		
		private System.Nullable<int> _FeedbackCode;
		
		private string _Feedback;
		
		private System.DateTime _CreateTime;
		
		private System.DateTime _ModifiedTime;
		
		private EntityRef<Worker> _Worker;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnThirdPartyIdChanging(int value);
    partial void OnThirdPartyIdChanged();
    partial void OnTeamThirdPartyIdChanging(int value);
    partial void OnTeamThirdPartyIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnFeedbackCodeChanging(System.Nullable<int> value);
    partial void OnFeedbackCodeChanged();
    partial void OnFeedbackChanging(string value);
    partial void OnFeedbackChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    partial void OnModifiedTimeChanging(System.DateTime value);
    partial void OnModifiedTimeChanged();
    #endregion
		
		public WorkerSync()
		{
			this._Worker = default(EntityRef<Worker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Worker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirdPartyId", DbType="Int NOT NULL")]
		public int ThirdPartyId
		{
			get
			{
				return this._ThirdPartyId;
			}
			set
			{
				if ((this._ThirdPartyId != value))
				{
					this.OnThirdPartyIdChanging(value);
					this.SendPropertyChanging();
					this._ThirdPartyId = value;
					this.SendPropertyChanged("ThirdPartyId");
					this.OnThirdPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamThirdPartyId", DbType="Int NOT NULL")]
		public int TeamThirdPartyId
		{
			get
			{
				return this._TeamThirdPartyId;
			}
			set
			{
				if ((this._TeamThirdPartyId != value))
				{
					this.OnTeamThirdPartyIdChanging(value);
					this.SendPropertyChanging();
					this._TeamThirdPartyId = value;
					this.SendPropertyChanged("TeamThirdPartyId");
					this.OnTeamThirdPartyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackCode", DbType="Int")]
		public System.Nullable<int> FeedbackCode
		{
			get
			{
				return this._FeedbackCode;
			}
			set
			{
				if ((this._FeedbackCode != value))
				{
					this.OnFeedbackCodeChanging(value);
					this.SendPropertyChanging();
					this._FeedbackCode = value;
					this.SendPropertyChanged("FeedbackCode");
					this.OnFeedbackCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feedback", DbType="NVarChar(500)")]
		public string Feedback
		{
			get
			{
				return this._Feedback;
			}
			set
			{
				if ((this._Feedback != value))
				{
					this.OnFeedbackChanging(value);
					this.SendPropertyChanging();
					this._Feedback = value;
					this.SendPropertyChanged("Feedback");
					this.OnFeedbackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedTime", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedTime
		{
			get
			{
				return this._ModifiedTime;
			}
			set
			{
				if ((this._ModifiedTime != value))
				{
					this.OnModifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._ModifiedTime = value;
					this.SendPropertyChanged("ModifiedTime");
					this.OnModifiedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Worker_WorkerSync", Storage="_Worker", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Worker Worker
		{
			get
			{
				return this._Worker.Entity;
			}
			set
			{
				Worker previousValue = this._Worker.Entity;
				if (((previousValue != value) 
							|| (this._Worker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Worker.Entity = null;
						previousValue.WorkerSync = null;
					}
					this._Worker.Entity = value;
					if ((value != null))
					{
						value.WorkerSync = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(string);
					}
					this.SendPropertyChanged("Worker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZmskAuthentication")]
	public partial class ZmskAuthentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _IdNumber;
		
		private string _Nation;
		
		private string _Address;
		
		private string _Avatar;
		
		private System.Nullable<int> _Sex;
		
		private int _Type;
		
		private int _Result;
		
		private string _DeviceNumber;
		
		private string _GroupId;
		
		private string _AuthTimeStamp;
		
		private string _IdcardImage;
		
		private string _IdcardInfo;
		
		private string _SimilarDegree;
		
		private string _SignOffice;
		
		private string _LegalDate;
		
		private string _Birthday;
		
		private System.DateTime _CreateTime;
		
		private EntityRef<ZmskAuthenticationSync> _ZmskAuthenticationSync;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdNumberChanging(string value);
    partial void OnIdNumberChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnSexChanging(System.Nullable<int> value);
    partial void OnSexChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnResultChanging(int value);
    partial void OnResultChanged();
    partial void OnDeviceNumberChanging(string value);
    partial void OnDeviceNumberChanged();
    partial void OnGroupIdChanging(string value);
    partial void OnGroupIdChanged();
    partial void OnAuthTimeStampChanging(string value);
    partial void OnAuthTimeStampChanged();
    partial void OnIdcardImageChanging(string value);
    partial void OnIdcardImageChanged();
    partial void OnIdcardInfoChanging(string value);
    partial void OnIdcardInfoChanged();
    partial void OnSimilarDegreeChanging(string value);
    partial void OnSimilarDegreeChanged();
    partial void OnSignOfficeChanging(string value);
    partial void OnSignOfficeChanged();
    partial void OnLegalDateChanging(string value);
    partial void OnLegalDateChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnCreateTimeChanging(System.DateTime value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public ZmskAuthentication()
		{
			this._ZmskAuthenticationSync = default(EntityRef<ZmskAuthenticationSync>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNumber", DbType="NVarChar(300)")]
		public string IdNumber
		{
			get
			{
				return this._IdNumber;
			}
			set
			{
				if ((this._IdNumber != value))
				{
					this.OnIdNumberChanging(value);
					this.SendPropertyChanging();
					this._IdNumber = value;
					this.SendPropertyChanged("IdNumber");
					this.OnIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="NVarChar(20)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Int")]
		public System.Nullable<int> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Int NOT NULL")]
		public int Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeviceNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeviceNumber
		{
			get
			{
				return this._DeviceNumber;
			}
			set
			{
				if ((this._DeviceNumber != value))
				{
					this.OnDeviceNumberChanging(value);
					this.SendPropertyChanging();
					this._DeviceNumber = value;
					this.SendPropertyChanged("DeviceNumber");
					this.OnDeviceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="NVarChar(50)")]
		public string GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthTimeStamp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AuthTimeStamp
		{
			get
			{
				return this._AuthTimeStamp;
			}
			set
			{
				if ((this._AuthTimeStamp != value))
				{
					this.OnAuthTimeStampChanging(value);
					this.SendPropertyChanging();
					this._AuthTimeStamp = value;
					this.SendPropertyChanged("AuthTimeStamp");
					this.OnAuthTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdcardImage", DbType="NVarChar(MAX)")]
		public string IdcardImage
		{
			get
			{
				return this._IdcardImage;
			}
			set
			{
				if ((this._IdcardImage != value))
				{
					this.OnIdcardImageChanging(value);
					this.SendPropertyChanging();
					this._IdcardImage = value;
					this.SendPropertyChanged("IdcardImage");
					this.OnIdcardImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdcardInfo", DbType="NVarChar(50)")]
		public string IdcardInfo
		{
			get
			{
				return this._IdcardInfo;
			}
			set
			{
				if ((this._IdcardInfo != value))
				{
					this.OnIdcardInfoChanging(value);
					this.SendPropertyChanging();
					this._IdcardInfo = value;
					this.SendPropertyChanged("IdcardInfo");
					this.OnIdcardInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimilarDegree", DbType="NVarChar(200)")]
		public string SimilarDegree
		{
			get
			{
				return this._SimilarDegree;
			}
			set
			{
				if ((this._SimilarDegree != value))
				{
					this.OnSimilarDegreeChanging(value);
					this.SendPropertyChanging();
					this._SimilarDegree = value;
					this.SendPropertyChanged("SimilarDegree");
					this.OnSimilarDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignOffice", DbType="NVarChar(200)")]
		public string SignOffice
		{
			get
			{
				return this._SignOffice;
			}
			set
			{
				if ((this._SignOffice != value))
				{
					this.OnSignOfficeChanging(value);
					this.SendPropertyChanging();
					this._SignOffice = value;
					this.SendPropertyChanged("SignOffice");
					this.OnSignOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegalDate", DbType="NVarChar(50)")]
		public string LegalDate
		{
			get
			{
				return this._LegalDate;
			}
			set
			{
				if ((this._LegalDate != value))
				{
					this.OnLegalDateChanging(value);
					this.SendPropertyChanging();
					this._LegalDate = value;
					this.SendPropertyChanged("LegalDate");
					this.OnLegalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="NVarChar(50)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZmskAuthentication_ZmskAuthenticationSync", Storage="_ZmskAuthenticationSync", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ZmskAuthenticationSync ZmskAuthenticationSync
		{
			get
			{
				return this._ZmskAuthenticationSync.Entity;
			}
			set
			{
				ZmskAuthenticationSync previousValue = this._ZmskAuthenticationSync.Entity;
				if (((previousValue != value) 
							|| (this._ZmskAuthenticationSync.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZmskAuthenticationSync.Entity = null;
						previousValue.ZmskAuthentication = null;
					}
					this._ZmskAuthenticationSync.Entity = value;
					if ((value != null))
					{
						value.ZmskAuthentication = this;
					}
					this.SendPropertyChanged("ZmskAuthenticationSync");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
