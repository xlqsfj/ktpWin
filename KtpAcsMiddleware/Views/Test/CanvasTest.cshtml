@{
    ViewBag.Title = "Canvas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Canvas</h2>
<button type="button" id="take">拍照</button>
<br/>
<video id="v" style="height: 480px; width: 640px;"></video>
<canvas id="canvas" style="display: none;"></canvas>
<br/>
<img src="" id="photo" alt="photo">
<script>
    !(function() {
        var $video = document.getElementById('v');
        var $take = document.getElementById('take');
        var $canvas = document.getElementById('canvas');
        var $photo = document.getElementById('photo');

        // 老的浏览器可能根本没有实现 mediaDevices，所以我们可以先设置一个空的对象
        if (navigator.mediaDevices === undefined) {
            navigator.mediaDevices = {};
        }
        if (navigator.mediaDevices.getUserMedia === undefined) {
            navigator.mediaDevices.getUserMedia = function(constraints) {
                // 首先，如果有getUserMedia的话，就获得它
                var getUserMedia = navigator.webkitGetUserMedia ||
                    navigator.mozGetUserMedia ||
                    navigator.msGetUserMedia;
                // 一些浏览器根本没实现它 - 那么就返回一个error到promise的reject来保持一个统一的接口
                if (!getUserMedia) {
                    return window.Promise.reject(new Error('getUserMedia is not implemented in this browser'));
                }
                // 否则，为老的navigator.getUserMedia方法包裹一个Promise
                return new window.Promise(function(resolve, reject) {
                    getUserMedia.call(navigator, constraints, resolve, reject);
                });
            };
        }
        var constraints = {
            video: true,
            audio: false
        };
        var videoPlaying = false;
        var promise = navigator.mediaDevices.getUserMedia(constraints);
        promise.then(stream => {
            // 旧的浏览器可能没有srcObject
            if ("srcObject" in v) {
                $video.srcObject = stream;
            } else {
                // 防止再新的浏览器里使用它，应为它已经不再支持了
                $video.src = window.URL.createObjectURL(stream);
            }
            $video.onloadedmetadata = function() {
                $video.play();
                videoPlaying = true;
            };
        }).catch(err => {
            console.error(err.name + ": " + err.message);
        });
        $take.addEventListener('click',
            function() {
                if (videoPlaying) {
                    $canvas.width = $video.videoWidth;
                    $canvas.height = $video.videoHeight;
                    $canvas.getContext('2d').drawImage(v, 0, 0);
                    var photoData = $canvas.toDataURL('image/webp');
                    // Generate the image data
                    var sendPic = $canvas.toDataURL("image/png");
                    sendPic = sendPic.replace(/^data:image\/(png|jpg);base64,/, "");
                    // Sending the image data to Server
                    $.ajax({
                        type: 'POST',
                        url: 'UploadImage',
                        data: '{ "imageData" : "' + sendPic + '" }',
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        success: function() {
                            alert("Done, Picture Uploaded222.");
                        }
                    });
                    $photo.setAttribute('src', photoData);
                }
            },
            false);
    })();
</script>